import pandas
import numpy   as np


def run():
    data = [
        {"name": "小明", "age": 0, "sex": "男"},
        {"name": "小明1", "age": 1, "sex": "男1"},
        {"name": "小明2", "age": 2, "sex": "男2"}
    ]
    t = pandas.DataFrame(data)
    data1 = [
        ["大明", 100, "女"],
        ["大明1", 1001, "女2"],
        ["大明2", 1002, "女2"]
    ]
    tt = pandas.DataFrame(data1, columns=["姓名", "年龄", "性别"], index=list("abc"))
    print(t)
    print(tt)
    # -------------------------- 显示前前几行和尾几行 --------------------------
    print("-" * 25, "显示前前几行和尾几行", "-" * 25)
    print(t.head(1))  # 不填写数字默认5行
    print(t.tail(1))  # 不填写数字默认5行
    # -------------------------- 行数列数 --------------------------
    print("-" * 25, "行数列数", "-" * 25)
    print(t.shape)
    # -------------------------- 数据类型 --------------------------
    print("-" * 25, "数据类型", "-" * 25)
    print(t.dtypes)
    # -------------------------- 数据维度 --------------------------
    print("-" * 25, "数据维度", "-" * 25)
    print(t.ndim)
    # -------------------------- 行索引和列索引 --------------------------
    print("-" * 25, "行索引和列索引", "-" * 25)
    print(t.index)
    print(t.columns)
    # -------------------------- 对象值 --------------------------
    print("-" * 25, "对象值", "-" * 25)
    print(t.values)
    # -------------------------- info --------------------------
    print("-" * 25, "info", "-" * 25)
    print(t.info())
    # -------------------------- 快速统计 --------------------------
    print("-" * 25, "快速统计", "-" * 25)
    print(t.describe())
    # -------------------------- 排序 --------------------------
    print("-" * 25, "排序", "-" * 25)
    print(t.sort_values(by="name", ascending=False))  # 降序
    # -------------------------- 取行 --------------------------
    print("-" * 25, "取行", "-" * 25)
    print(t[:2])  # 前几行
    print("\n")

    print(t[1:2])  # 第几行
    print("\n")

    print(t[:2]["sex"])  # 前几行的某个数据
    print("\n")
    # -------------------------- 取列 Series类型 --------------------------
    print("-" * 25, "取列 Series类型", "-" * 25)
    print(t["name"])  # 列
    # -------------------------- loc索引 取某几行某几列 --------------------------
    print("-" * 25, "loc索引 取某几行某几列", "-" * 25)
    print(t.loc[1, "name"])  # 2行name列
    print("\n")
    print(t.loc[:, "name"])  # name列
    print("\n")
    print(t.loc[:, ["name", "age"]])
    print("\n")
    print(t.loc[[0, 2], :])
    # -------------------------- iloc 通过位置进行索引 --------------------------
    print("-" * 25, "iloc 通过位置进行索引", "-" * 25)
    print(t.iloc[0, :])  # 第一行
    print("\n")

    print(t.iloc[[0, 2], :])  # 第一 三行
    print("\n")

    print(t.iloc[:, 1])  # 第二列
    print("\n")

    print(t.iloc[2, 1])  # 取3行2列
    print("\n")

    print(t.iloc[1:, :2])  # 第一行后的每一行和第二列前的每一列
    # -------------------------- bool索引 --------------------------
    print("-" * 25, "bool索引", "-" * 25)
    print(t[t["age"] > 1])
    # -------------------------- 删除nan --------------------------
    print("-" * 25, "删除nan", "-" * 25)
    t1 = t.dropna(axis=1, how="all", inplace=True)  # 全为nan的行会被删掉, inplace = true 的时候会在t上也做修改
    # -------------------------- 替换nan --------------------------
    print("-" * 25, "替换nan", "-" * 25)
    t2 = t.copy(deep=True)
    t2.loc[0, "age"] = np.nan
    print(t2)
    print("\n")
    t2["age"] = t2["age"].fillna(t2["age"].mean())
    print(t2)


if __name__ == '__main__':
    run()
